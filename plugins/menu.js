import moment from "moment-timezone";
import fs from "fs";
import os from "os";
import pkg from "@whiskeysockets/baileys";
const { generateWAMessageFromContent, proto } = pkg;
import config from "../config.cjs";
import axios from "axios";

// Time logic
const xtime = moment.tz("Africa/Nairobi").format("HH:mm:ss");
const xdate = moment.tz("Africa/Nairobi").format("DD/MM/YYYY");
const time2 = moment().tz("Africa/Nairobi").format("HH:mm:ss");
let pushwish = "";

if (time2 < "05:00:00") {
  pushwish = `Good Morning üåÑ`;
} else if (time2 < "11:00:00") {
  pushwish = `Good Morning üåÑ`;
} else if (time2 < "15:00:00") {
  pushwish = `Good Afternoon üåÖ`;
} else if (time2 < "18:00:00") {
  pushwish = `Good Evening üåÉ`;
} else if (time2 < "19:00:00") {
  pushwish = `Good Evening üåÉ`;
} else {
  pushwish = `Good Night üåå`;
}

// Fancy font utility
function toFancyFont(text, isUpperCase = false) {
  const fonts = {
 a: "·¥Ä",
 b: " ô",
 c: "·¥Ñ",
 d: "·¥Ö",
 e: "·¥á",
 f: "“ì",
 g: "…¢",
 h: " ú",
 i: "…™",
 j: "·¥ä",
 k: "·¥ã",
 l: " ü", 
 m: "·¥ç",
 n: "…¥",
 o: "·¥è",
 p: "·¥ò",
 q: "«´",
 r: " Ä", 
 s: "s",
 t: "·¥õ",
 u: "·¥ú",
 v: "·¥†",
 w: "·¥°",
 x: "x",
 y: " è",
 z: "·¥¢",
  };
  const formattedText = isUpperCase ? text.toUpperCase() : text.toLowerCase();
  return formattedText
    .split("")
    .map((char) => fonts[char] || char)
    .join("");
}

// Image fetch utility
async function fetchMenuImage() {
  const imageUrl = "https://files.catbox.moe/omgszj.jpg";
  for (let i = 0; i < 3; i++) {
    try {
      const response = await axios.get(imageUrl, { responseType: "arraybuffer" });
      return Buffer.from(response.data, "binary");
    } catch (error) {
      if (error.response?.status === 429 && i < 2) {
        console.log(`Rate limit hit, retrying in 2s...`);
        await new Promise((resolve) => setTimeout(resolve, 2000));
        continue;
      }
      console.error("‚ùå Failed to fetch image:", error);
      return null;
    }
  }
}

const menu = async (m, Matrix) => {
  try {
    const prefix = config.PREFIX;
    const cmd = m.body.startsWith(prefix) ? m.body.slice(prefix.length).split(" ")[0].toLowerCase() : "";
    const mode = config.MODE === "public" ? "public" : "private";
    const totalCommands = 70;

    const validCommands = ["list", "help", "menu"];
    const subMenuCommands = [
      "download-menu",
      "converter-menu",
      "ai-menu",
      "tools-menu",
      "group-menu",
      "search-menu",
      "main-menu",
      "owner-menu",
      "stalk-menu",
    ];

    // Fetch image for all cases
    const menuImage = await fetchMenuImage();

    // Handle main menu
    if (validCommands.includes(cmd)) {
      const mainMenu = `
‚îè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îä …¥·¥Ä·¥ç·¥á :  *N◊†…ê·Ç¶œÖ‚ÑìœÉ ◊†·Ç¶*
‚îä ·¥ç·¥è·¥Ö·¥á : *[ ${mode} ]*
‚îä ·¥ò Ä·¥á“ì…™x : * [ ${prefix} ]*
‚îä ·¥†·¥á Äs…™·¥è…¥ : *.0.0.12  ô·¥á·¥õ·¥Ä*
‚îó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îè           *„Äê ·¥ç·¥á…¥·¥ú  ü…™s·¥õ „Äë‚á≥Ô∏é*
- . ‚ë†  *·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö ·¥ç·¥á…¥·¥ú*
- . ‚ë°  *…¢ Ä·¥è·¥ú·¥ò ·¥ç·¥á…¥·¥ú*
- . ‚ë¢  *“ì·¥ú…¥ ·¥ç·¥á…¥·¥ú*
- . ‚ë£  *·¥è·¥°…¥·¥á Ä ·¥ç·¥á…¥·¥ú*
- . ‚ë§  *·¥Ä…™ ·¥ç·¥á…¥·¥ú*
- . ‚ë•  *·¥Ä…¥…™·¥ç·¥á ·¥ç·¥á…¥·¥ú*
- . ‚ë¶  *·¥Ñ·¥è…¥·¥†·¥á Ä·¥õ ·¥ç·¥á…¥·¥ú*
- . ‚ëß  *·¥è·¥õ ú·¥á Ä ·¥ç·¥á…¥·¥ú*
- . ‚ë®  * Ä·¥á·¥Ä·¥Ñ·¥õ…™·¥è…¥s ·¥ç·¥á…¥·¥ú*
- . ‚ë©  *·¥ç·¥Ä…™…¥ ·¥ç·¥á…¥·¥ú*
‚îó
‚îè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
‚îä*Hallo my family ${pushwish}*
‚îó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑
`;

      const messageOptions = {
        viewOnce: true,
        buttons: [
          {
            buttonId: `${prefix}download-menu`,
            buttonText: { displayText: ` ${toFancyFont("All Commands Cmd")}` },
            type: 1,
          },
          {
            buttonId: `${prefix}converter-menu`,
            buttonText: { displayText: ` ${toFancyFont("follow Join family")}` },
            type: 1,
          },
        ],
         contextInfo: {
         mentionedJid: [m.sender],
           forwardingScore: 999,
           isForwarded: true,
           forwardedNewsletterMessageInfo: {
           newsletterJid: '120363399999197102@newsletter',
           newsletterName: "‚ï≠‚Ä¢‚Ä¢‚û§¬ÆNjabulo Jb",
           serverMessageId: 143
          },
        },
      };

      // Send menu with or without image
      if (menuImage) {
        await Matrix.sendMessage(m.from,{ 
            image: menuImage,
          caption: mainMenu,
          ...messageOptions
          }, { quoted: {
            key: {
                fromMe: false,
                participant: `0@s.whatsapp.net`,
                remoteJid: "status@broadcast"
            },
            message: {
                contactMessage: {
                    displayName: "‚úÜÔ∏éN◊†…ê·Ç¶œÖ‚ÑìœÉ ◊†·Ç¶ verified",
                    vcard: `BEGIN:VCARD\nVERSION:3.0\nN:Njabulo-Jb;BOT;;;\nFN:Njabulo-Jb\nitem1.TEL;waid=254700000000:+254 700 000000\nitem1.X-ABLabel:Bot\nEND:VCARD`
                }
            }
        } });
      } else {
        await Matrix.sendMessage(m.from, { text: mainMenu, ...messageOptions }, { quoted: m });
      }

      // Send audio as a voice note
      await Matrix.sendMessage(m.from,{ 
          audio: { url: "https://files.catbox.moe/z06nkt.mp3" },
          mimetype: "audio/mp4", ptt: true
          }, { quoted: {
            key: {
                fromMe: false,
                participant: `0@s.whatsapp.net`,
                remoteJid: "status@broadcast"
            },
            message: {
                contactMessage: {
                    displayName: "‚úÜÔ∏éN◊†…ê·Ç¶œÖ‚ÑìœÉ ◊†·Ç¶ verified",
                    vcard: `BEGIN:VCARD\nVERSION:3.0\nN:Njabulo-Jb;BOT;;;\nFN:Njabulo-Jb\nitem1.TEL;waid=254700000000:+254 700 000000\nitem1.X-ABLabel:Bot\nEND:VCARD`
                }
            }
        } });

    // Handle sub-menu commands
    if (subMenuCommands.includes(cmd)) {
      let menuTitle;
      let menuResponse;

      switch (cmd) {
        case "download-menu":
          menuTitle = "All Commands Cmd";
          menuResponse = `*„Äêdownload„Äë*
${toFancyFont(".‚ë†apk")}
${toFancyFont(".‚ë°facebook")}
${toFancyFont(".‚ë¢mediafire")}
${toFancyFont(".‚ë£pinterest")}
${toFancyFont(".‚ë§gitclone")}
${toFancyFont(".‚ë•gdrive")}
${toFancyFont(".‚ë¶insta")}
${toFancyFont(".‚ëßytmp3")}
${toFancyFont(".‚ë®ytmp4")}
${toFancyFont(".‚ë©play")}
${toFancyFont(".‚ë™song")}
${toFancyFont(".‚ë´video")}
${toFancyFont(".‚ë¨ytmp3doc")}
${toFancyFont(".‚ë≠ytmp4doc")}
${toFancyFont(".‚ëÆtiktok")}

${toFancyFont("‚ë° *„ÄêConverter„Äë*")}
${toFancyFont(".‚ë†attp")}
${toFancyFont(".‚ë°attp2")}
${toFancyFont(".‚ë¢attp3")}
${toFancyFont(".‚ë£ebinary")}
${toFancyFont(".‚ë§dbinary")}
${toFancyFont(".‚ë•emojimix")}
${toFancyFont(".‚ë¶mp3")}

${toFancyFont("‚ë¢ *„ÄêAI„Äë*")}
${toFancyFont(".‚ë†ai")}
${toFancyFont(".‚ë°bug")}
${toFancyFont(".‚ë¢report")}
${toFancyFont(".‚ë£gpt")}
${toFancyFont(".‚ë§dall")}
${toFancyFont(".‚ë•remini")}
${toFancyFont(".‚ë¶gemini")}

${toFancyFont("‚ë£ *„ÄêTools„Äë*")}
${toFancyFont(".‚ë†calculator")}
${toFancyFont(".‚ë°tempmail")}
${toFancyFont(".‚ë¢checkmail")}
${toFancyFont(".‚ë£trt")}
${toFancyFont(".‚ë§tts")}

${toFancyFont("‚ë§ *„ÄêGroup„Äë*")}
${toFancyFont(".‚ë†linkgroup")}
${toFancyFont(".‚ë°setppgc")}
${toFancyFont(".‚ë¢setname")}
${toFancyFont(".‚ë£setdesc")}
${toFancyFont(".‚ë§group")}
${toFancyFont(".‚ë•gcsetting")}
${toFancyFont(".‚ë¶welcome")}
${toFancyFont(".‚ëßadd")}
${toFancyFont(".‚ë®kick")}
${toFancyFont(".‚ë©hidetag")}
${toFancyFont(".‚ë™tagall")}
${toFancyFont(".‚ë´antilink")}
${toFancyFont(".‚ë¨antitoxic")}
${toFancyFont(".‚ë≠promote")}
${toFancyFont(".‚ëÆdemote")}
${toFancyFont(".‚ëØgetbio")}

${toFancyFont("‚ë• *„ÄêSearch„Äë*")}
${toFancyFont(".‚ë†play")}
${toFancyFont(".‚ë°yts")}
${toFancyFont(".‚ë¢imdb")}
${toFancyFont(".‚ë£google")}
${toFancyFont(".‚ë§gimage")}
${toFancyFont(".‚ë•pinterest")}
${toFancyFont(".‚ë¶wallpaper")}
${toFancyFont(".‚ëßwikimedia")}
${toFancyFont(".‚ë®ytsearch")}
${toFancyFont(".‚ë©ringtone")}
${toFancyFont(".‚ë™lyrics")}

${toFancyFont("‚ë¶ *„ÄêMain„Äë*")}
${toFancyFont(".‚ë†ping")}
${toFancyFont(".‚ë°alive")}
${toFancyFont(".‚ë¢owner")}
${toFancyFont(".‚ë£menu")}
${toFancyFont(".‚ë§infobot")}

${toFancyFont("‚ëß *„ÄêOwner„Äë*")}
${toFancyFont(".‚ë†join")}
${toFancyFont(".‚ë°leave")}
${toFancyFont(".‚ë¢block")}
${toFancyFont(".‚ë£unblock")}
${toFancyFont(".‚ë§setppbot")}
${toFancyFont(".‚ë•anticall")}
${toFancyFont(".‚ë¶setstatus")}
${toFancyFont(".‚ëßsetnamebot")}
${toFancyFont(".‚ë®autorecording")}
${toFancyFont(".‚ë©autolike")}
${toFancyFont(".‚ë™autotyping")}
${toFancyFont(".‚ë´alwaysonline")}
${toFancyFont(".‚ë¨autoread")}
${toFancyFont(".‚ë≠autosview")}

${toFancyFont("*„Äê‚ë® Stalk„Äë*")}
${toFancyFont(".‚ë†truecaller")}
${toFancyFont(".‚ë°instastalk")}
${toFancyFont(".‚ë¢githubstalk")}
`;
          
        break;

        default:
          return;
      }

      // Format the full response
      const fullResponse = `
*‚ë†‚Ä¢ ${toFancyFont("aira")} (Command Menu ‚ö†)*
*‚ë°‚Ä¢ ${toFancyFont("Bot")}*: ${toFancyFont("*(aira)*")}
*‚ë£‚Ä¢ ${toFancyFont("Date")}*: ${xdate}
*‚ë§‚Ä¢ ${toFancyFont("Time")}*: ${xtime} 
*‚ë•‚Ä¢ ${toFancyFont("Prefix")}: [ ${prefix} ]*
*‚ë¶‚Ä¢ ${toFancyFont("Mode")}*: ${mode}
*‚ëß‚Ä¢ ${toFancyFont("Library")}: (Baileys)*

${menuResponse}

> ‚úÜÔ∏éPœÉ…Ø“Ω…æ“Ω‘É ·Ç¶·Éß N◊†…ê·Ç¶œÖ‚ÑìœÉ ◊†·Ç¶
`;

       if (menuImage) {
        await Matrix.sendMessage(m.from,{
            text: fullResponse,
            contextInfo: {
             isForwarded: true,
             forwardedNewsletterMessageInfo: {
             serverMessageId: 143,          
              },
            },
          },
          { quoted: m }
        );
      } else {
        await Matrix.sendMessage(m.from, {
          text: fullResponse,
          contextInfo: {
            isForwarded: true,
            forwardedNewsletterMessageInfo: {
            serverMessageId: 143,
            },
          },
        }, { quoted: m });
      }
    }
  } catch (error) {
    console.error(`‚ùå Menu error: ${error.message}`);
    await Matrix.sendMessage(m.from, {
      text: `‚Ä¢
‚Ä¢ *Njabulo Jb* hit a snag! Error: ${error.message || "Failed to load menu"} üò°
‚Ä¢`,
    }, { quoted: m });
  }
};

export default menu;
